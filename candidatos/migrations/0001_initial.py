# Generated by Django 5.1.2 on 2024-10-20 00:03

import django.core.validators
import multiselectfield.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Candidato',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[a-zA-ZÀ-ÿ\\s]+$', 'Somente letras são permitidas.')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('prefixo', models.CharField(blank=True, max_length=2, null=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('celular', models.CharField(blank=True, max_length=15, null=True)),
                ('curriculo', models.FileField(blank=True, null=True, upload_to='curriculos/')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='fotos_perfil/')),
                ('data_nasc', models.DateField()),
                ('estado_civil', models.CharField(choices=[('CASADO', 'Casado'), ('SOLTEIRO', 'Solteiro'), ('DIVORCIADO', 'Divorciado')], default='SOLTEIRO', max_length=10)),
                ('rg', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator('^\\d+$', 'Somente números são permitidos.')])),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator('^\\d{11}$', 'O CPF deve conter 11 dígitos, apenas números.')])),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], default='M', max_length=1)),
                ('nome_pai', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-ZÀ-ÿ\\s]+$', 'Somente letras são permitidas.')])),
                ('nome_mae', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-ZÀ-ÿ\\s]+$', 'Somente letras são permitidas.')])),
                ('endereco', models.CharField(max_length=100)),
                ('numero', models.IntegerField()),
                ('bairro', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[a-zA-ZÀ-ÿ\\s]+$', 'Somente letras são permitidas.')])),
                ('cep', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{5}-?\\d{3}$', 'Formato de CEP inválido. Use 12345-678 ou 12345678.')])),
                ('cidade', models.CharField(max_length=200)),
                ('estado', models.CharField(choices=[('', 'Selecione Estado'), ('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], default='', max_length=2)),
                ('possui_habilitacao', models.BooleanField()),
                ('tipo_habilitacao', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('A', 'Tipo A'), ('B', 'Tipo B'), ('C', 'Tipo C'), ('D', 'Tipo D')], max_length=7, null=True)),
                ('possui_carteira_profissional', models.BooleanField()),
                ('serie_carteira_profissional', models.CharField(blank=True, choices=[('A', 'Série A'), ('B', 'Série B'), ('C', 'Série C'), ('D', 'Série D')], max_length=10, null=True)),
                ('formacao', models.CharField(choices=[('', 'Selecione Opções'), ('FL', 'Fundamental'), ('EM', 'Ensino Médio'), ('1C', '1º Grau Completo'), ('1I', '1º Grau Incompleto'), ('2C', '2º Grau Completo'), ('2I', '2º Grau Incompleto'), ('SC', 'Superior Completo'), ('SI', 'Superior Incompleto'), ('PG', 'Pós-Graduação'), ('MBA', 'MBA'), ('ME', 'Mestrado'), ('DO', 'Doutorado')], default='', max_length=50)),
                ('curso', models.CharField(blank=True, max_length=500, null=True)),
                ('ano_conclusao', models.IntegerField(blank=True, null=True)),
                ('empresa_atual', models.CharField(blank=True, max_length=200, null=True)),
                ('segmento_atual', models.CharField(blank=True, max_length=100, null=True)),
                ('cargo_atual', models.CharField(blank=True, max_length=50, null=True)),
                ('data_inicio_atual', models.DateField(blank=True, null=True)),
                ('data_saida_atual', models.DateField(blank=True, null=True)),
                ('atribuicoes_atual', models.TextField(blank=True, max_length=200, null=True)),
                ('empresa_anterior_1', models.CharField(blank=True, max_length=200, null=True)),
                ('segmento_anterior_1', models.CharField(blank=True, max_length=100, null=True)),
                ('cargo_anterior_1', models.CharField(blank=True, max_length=50, null=True)),
                ('data_inicio_anterior_1', models.DateField(blank=True, null=True)),
                ('data_saida_anterior_1', models.DateField(blank=True, null=True)),
                ('atribuicoes_anterior_1', models.TextField(blank=True, max_length=200, null=True)),
                ('empresa_anterior_2', models.CharField(blank=True, max_length=200, null=True)),
                ('segmento_anterior_2', models.CharField(blank=True, max_length=100, null=True)),
                ('cargo_anterior_2', models.CharField(blank=True, max_length=50, null=True)),
                ('data_inicio_anterior_2', models.DateField(blank=True, null=True)),
                ('data_saida_anterior_2', models.DateField(blank=True, null=True)),
                ('atribuicoes_anterior_2', models.TextField(blank=True, max_length=200, null=True)),
                ('cargo_pretendido', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-ZÀ-ÿ\\s]+$', 'Somente letras são permitidas.')])),
                ('faixa_salarial_desejada', models.CharField(max_length=100)),
                ('mensagem', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
    ]
